text
eula --agreed
lang en_US.UTF-8
keyboard --vckeymap=us --xlayouts='us'
timezone Etc/UTC --isUtc
url --url="http://{{ bastion_ip }}/rhel/media/"
rootpw --iscrypted {{ root_password|password_hash('sha512') }}
auth --enableshadow --passalgo=sha512
services --enabled="chronyd"
firstboot --enable
clearpart --all --initlabel
zerombr
part /boot --fstype ext4 --size=500
part /boot/efi --fstype vfat --size=200
part pv.01 --size=100000 --grow --ondisk=sdc
volgroup vg00 pv.01
logvol swap --vgname=vg00 --name=swapvol --fstype=swap --size=4000
logvol / --vgname=vg00  --fstype=xfs  --size=80000 --name=lv_root
part raid.1 --size=1 --grow --ondisk=sda
part raid.2 --size=1 --grow --ondisk=sdb
raid /var/lib/docker --level=1 --device=docker-storage raid.1 raid.2

reboot

%packages
@^minimal
@core
chrony
kexec-tools
net-tools
wget
git
tcpdump
%end

%addon com_redhat_kdump --enable --reserve-mb='auto'
%end

%post --erroronfail
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0
DEVICE=bond0
ONBOOT=yes
{% if hostvars[item]['openshift_public_ip'] is defined and external_vlan is not defined %}
IPADDR={{ hostvars[item]['openshift_public_ip'] }}
NETMASK={{ external_netmask }}
GATEWAY={{ external_gateway }}
{% elif hostvars[item]['openshift_public_ip'] is defined and external_vlan is defined %}
IPADDR={{ hostvars[item]['openshift_ip'] }}
NETMASK={{ internal_netmask }}
DNS1={{ dns_local }}
{% elif internal_vlan is not defined %}
IPADDR={{ hostvars[item]['openshift_ip'] }}
NETMASK={{ internal_netmask }}
GATEWAY={{ internal_gateway }}
DNS1={{ dns_local }}
{% endif %}
BOOTPROTO=none
USERCTL=no
BONDING_OPTS="mode=802.3ad miimon=100 xmit_hash_policy=0 use_carrier=1"
EOF

{% if internal_vlan is defined %}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0.{{ internal_vlan }}
DEVICE=bond0.{{ internal_vlan }}
IPADDR={{ hostvars[item]['openshift_ip'] }}
NETMASK={{ internal_netmask }}
{% if hostvars[item]['openshift_public_ip'] is undefined %}
GATEWAY={{ internal_gateway }}
{% endif %}
DNS1={{ dns_local }}
ONBOOT=yes
VLAN=yes
BOOTPROTO=none
USERCTL=no
EOF
{% endif %}

{% if external_vlan is defined and hostvars[item]['openshift_public_ip'] is defined %}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0.{{ external_vlan }}
DEVICE=bond0.{{ external_vlan }}
IPADDR={{ hostvars[item]['openshift_public_ip'] }}
NETMASK={{ external_netmask }}
GATEWAY={{ external_gateway }}
DNS1={{ dns_local }}
ONBOOT=yes
VLAN=yes
BOOTPROTO=none
USERCTL=no
EOF
{% endif %}

{% if hostvars[item]['interface1'] is defined -%}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-{{ hostvars[item]['interface1'] }}
DEVICE={{ hostvars[item]['interface1'] }}
ONBOOT=yes
MASTER=bond0
BOOTPROTO=none
SLAVE=yes
EOF
{% endif %}
{% if hostvars[item]['interface1'] is not defined -%}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-{{ interface1 }}
DEVICE={{ interface1 }}
ONBOOT=yes
MASTER=bond0
BOOTPROTO=none
SLAVE=yes
EOF
{% endif %}

{% if hostvars[item]['interface2'] is defined -%}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-{{ hostvars[item]['interface2'] }}
DEVICE={{ hostvars[item]['interface2'] }}
ONBOOT=yes
MASTER=bond0
BOOTPROTO=none
SLAVE=yes
EOF
{% endif %}
{% if hostvars[item]['interface2'] is not defined -%}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-{{ interface2 }}
DEVICE={{ interface2 }}
ONBOOT=yes
MASTER=bond0
BOOTPROTO=none
SLAVE=yes
EOF
{% endif %}

cat << EOF > /etc/hostname
{{ hostvars[item]['openshift_hostname'] }}
EOF

%end
