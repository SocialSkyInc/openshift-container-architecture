lang en_US.UTF-8
keyboard us
timezone Etc/UTC --isUtc
url --url="http://{{ bastion_ip }}/atomic/media/"
rootpw --iscrypted {{ root_password|password_hash('sha512') }}
auth --enableshadow --passalgo=sha512
ostreesetup --nogpg --osname=rhel-atomic-host --remote=rhel-atomic-host --url=file:///install/ostree --ref=rhel-atomic-host/7/x86_64/standard
services --disabled cloud-init,cloud-config,cloud-final,cloud-init-local
clearpart --all --initlabel
zerombr
part /boot --fstype ext4 --size=500
part /boot/efi --fstype vfat --size=200
part pv.01 --size=100000 --grow --ondisk=sda
volgroup vg00 pv.01
logvol swap --vgname=vg00 --name=swapvol --fstype=swap --size=4000
logvol / --vgname=vg00  --fstype=xfs  --size=80000 --name=lv_root
#part pv.02 --size=100000 --grow --ondisk=sdb

reboot
%post --erroronfail
fn=/etc/ostree/remotes.d/rhel-atomic-host.conf; if test -f ${fn} && grep -q -e '^url=file:///install/ostree' ${fn}$; then rm ${fn}; fi
%end
%post --erroronfail

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0
DEVICE=bond0
ONBOOT=yes
{% if hostvars[item]['openshift_public_ip'] is defined and external_vlan is not defined %}
IPADDR={{ hostvars[item]['openshift_public_ip'] }}
NETMASK={{ external_netmask }}
GATEWAY={{ external_gateway }}
{% elif hostvars[item]['openshift_public_ip'] is defined and external_vlan is defined %}
IPADDR={{ hostvars[item]['openshift_ip'] }}
NETMASK={{ internal_netmask }}
DNS1={{ dns_local }}
{% elif internal_vlan is not defined %}
IPADDR={{ hostvars[item]['openshift_ip'] }}
NETMASK={{ internal_netmask }}
GATEWAY={{ internal_gateway }}
DNS1={{ dns_local }}
{% endif %}
BOOTPROTO=none
USERCTL=no
BONDING_OPTS="mode=802.3ad miimon=100 xmit_hash_policy=0 use_carrier=1"
EOF

{% if internal_vlan is defined %}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0.{{ internal_vlan }}
DEVICE=bond0.{{ internal_vlan }}
IPADDR={{ hostvars[item]['openshift_ip'] }}
NETMASK={{ internal_netmask }}
{% if hostvars[item]['openshift_public_ip'] is undefined %}
GATEWAY={{ internal_gateway }}
{% endif %}
DNS1={{ dns_local }}
ONBOOT=yes
VLAN=yes
BOOTPROTO=none
USERCTL=no
EOF
{% endif %}

{% if external_vlan is defined and hostvars[item]['openshift_public_ip'] is defined %}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0.{{ external_vlan }}
DEVICE=bond0.{{ external_vlan }}
IPADDR={{ hostvars[item]['openshift_public_ip'] }}
NETMASK={{ external_netmask }}
GATEWAY={{ external_gateway }}
DNS1={{ dns_local }}
ONBOOT=yes
VLAN=yes
BOOTPROTO=none
USERCTL=no
EOF
{% endif %}

{% if hostvars[item]['interface1'] is defined -%}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-{{ hostvars[item]['interface1'] }}
DEVICE={{ hostvars[item]['interface1'] }}
ONBOOT=yes
MASTER=bond0
BOOTPROTO=none
SLAVE=yes
EOF
{%- else -%}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-{{ interface1 }}
DEVICE={{ interface1 }}
ONBOOT=yes
MASTER=bond0
BOOTPROTO=none
SLAVE=yes
EOF
{%- endif -%}

{% if hostvars[item]['interface2'] is defined -%}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-{{ hostvars[item]['interface2'] }}
DEVICE={{ hostvars[item]['interface2'] }}
ONBOOT=yes
MASTER=bond0
BOOTPROTO=none
SLAVE=yes
EOF
{%- else -%}
cat << EOF > /etc/sysconfig/network-scripts/ifcfg-{{ interface2 }}
DEVICE={{ interface2 }}
ONBOOT=yes
MASTER=bond0
BOOTPROTO=none
SLAVE=yes
EOF
{%- endif -%}

cat << EOF > /etc/hostname
{{ hostvars[item]['openshift_hostname'] }}
EOF

cat << EOF > /etc/sysconfig/docker-storage-setup
DEVS=/dev/sdb
EOF

rm -f /etc/ostree/remotes.d/*.conf
echo 'unconfigured-state=This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.' >> $(ostree admin --print-current-dir).origin
#ostreesetup --nogpg --osname=rhel-atomic-host --remote=rhel-atomic-host --url=file:///install/ostree --ref=rhel-atomic-host/7/x86_64/standard
%end
